#pragma once

#include "KPLVersion.h"

class CIec101s;
typedef CArray<CIec101s,CIec101s> CIec101sArray;

class CIec101s:public CKPLVersion
{
public:
	int m_nProcNum;

	int PORT;
	int BAUDRATE;
	int STOPBITS;
	int PARITY;
	int BYTETIME;
	int WAITRESP;	
	int AMOUNTBYTE;
	int FLOWCONTROLL;
	int SIZE_LINK;
	int SIZE_COFT;
	int SIZE_ASDU;
	int SIZE_IOA;
	int ADRESS_LINK;
	int GLOBAL_ASDU;
	int NEXTMESSAGE;
	int CHECK_BAD_CHANEL;
	int RES_PORT;
	int SIZE_OBJECT_ARH;

	CIec101s(const CIec101s& aIec101s)
	{
		m_nProcNum=aIec101s.m_nProcNum;
		PORT=aIec101s.PORT;
		BAUDRATE=aIec101s.BAUDRATE;
		STOPBITS=aIec101s.STOPBITS;
		PARITY=aIec101s.PARITY;
		BYTETIME=aIec101s.BYTETIME;
		WAITRESP=aIec101s.WAITRESP;
		AMOUNTBYTE=aIec101s.AMOUNTBYTE;
		FLOWCONTROLL=aIec101s.FLOWCONTROLL;
		GLOBAL_ASDU=aIec101s.GLOBAL_ASDU;
		ADRESS_LINK=aIec101s.ADRESS_LINK;		
		SIZE_LINK=aIec101s.SIZE_LINK;
		SIZE_COFT=aIec101s.SIZE_COFT;
		SIZE_ASDU=aIec101s.SIZE_ASDU;
		SIZE_IOA=aIec101s.SIZE_IOA;		
		NEXTMESSAGE = aIec101s.NEXTMESSAGE;			
		CHECK_BAD_CHANEL=aIec101s.CHECK_BAD_CHANEL;
		RES_PORT=aIec101s.RES_PORT;
		SIZE_OBJECT_ARH=aIec101s.SIZE_OBJECT_ARH;
	}
	void operator = (const CIec101s& aIec101s)
	{
		m_nProcNum=aIec101s.m_nProcNum;
		PORT=aIec101s.PORT;
		BAUDRATE=aIec101s.BAUDRATE;
		STOPBITS=aIec101s.STOPBITS;
		PARITY=aIec101s.PARITY;
		BYTETIME=aIec101s.BYTETIME;
		WAITRESP=aIec101s.WAITRESP;
		AMOUNTBYTE=aIec101s.AMOUNTBYTE;
		FLOWCONTROLL=aIec101s.FLOWCONTROLL;
		GLOBAL_ASDU=aIec101s.GLOBAL_ASDU;
		ADRESS_LINK=aIec101s.ADRESS_LINK;		
		SIZE_LINK=aIec101s.SIZE_LINK;
		SIZE_COFT=aIec101s.SIZE_COFT;
		SIZE_ASDU=aIec101s.SIZE_ASDU;
		SIZE_IOA=aIec101s.SIZE_IOA;		
		NEXTMESSAGE = aIec101s.NEXTMESSAGE;
		CHECK_BAD_CHANEL=aIec101s.CHECK_BAD_CHANEL;
		RES_PORT=aIec101s.RES_PORT;
		SIZE_OBJECT_ARH=aIec101s.SIZE_OBJECT_ARH;
	}

	CIec101s(void);
	~CIec101s(void);
	BOOL SaveToFile(CString strFile);
	BOOL LoadFromFile(CString strFile);
};
