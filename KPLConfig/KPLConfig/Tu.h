#pragma once
#include "KPLVersion.h"

class CTu: public CKPLVersion
{
public:	
	int TYPE_PRIBOR;
	int ADRESS;
	int FUNCTION;
	int REGTU_ON;
	int REGTU_OFF;
	int DATATU_ON;
	int DATATU_OFF;
	int TU_CLOSER;
	//int TYPE_INFORMATION;
	int WAIT_RESP_TU;

	int ADDRESS_TS;
	int TS_ON;
	int TS_OFF;
	
	int IEC_ASDU;
	int TU_ACT_TRM_ENABLE;
	int TIMER_SEL_EXEC;
	int TIMER_ACT_TRM;

	int ADDRESS_DAMAGE_TU;
	int MASKA_DAMAGE_TU;
	CString strCOMMENT;
	
	CTu(const CTu& aTU)
	{
		TYPE_PRIBOR=aTU.TYPE_PRIBOR;
		ADRESS=aTU.ADRESS;
		FUNCTION=aTU.FUNCTION;
		REGTU_ON=aTU.REGTU_ON;
		REGTU_OFF=aTU.REGTU_OFF;
		DATATU_ON=aTU.DATATU_ON;
		DATATU_OFF=aTU.DATATU_OFF;
		TU_CLOSER=aTU.TU_CLOSER;
		//TYPE_INFORMATION=;
		WAIT_RESP_TU=aTU.WAIT_RESP_TU;
		IEC_ASDU=aTU.IEC_ASDU;
		TU_ACT_TRM_ENABLE=aTU.TU_ACT_TRM_ENABLE;
		TIMER_SEL_EXEC=aTU.TIMER_SEL_EXEC;
		TIMER_ACT_TRM=aTU.TIMER_ACT_TRM;

		ADDRESS_TS=aTU.ADDRESS_TS;
		TS_ON=aTU.TS_ON;
		TS_OFF=aTU.TS_OFF;

		ADDRESS_DAMAGE_TU=aTU.ADDRESS_DAMAGE_TU;
		MASKA_DAMAGE_TU=aTU.MASKA_DAMAGE_TU;
		strCOMMENT=aTU.strCOMMENT;
	}
	void operator = (const CTu& aTU)
	{
		TYPE_PRIBOR=aTU.TYPE_PRIBOR;
		ADRESS=aTU.ADRESS;
		FUNCTION=aTU.FUNCTION;
		REGTU_ON=aTU.REGTU_ON;
		REGTU_OFF=aTU.REGTU_OFF;
		DATATU_ON=aTU.DATATU_ON;
		DATATU_OFF=aTU.DATATU_OFF;
		TU_CLOSER=aTU.TU_CLOSER;
		//TYPE_INFORMATION=;
		WAIT_RESP_TU=aTU.WAIT_RESP_TU;
		IEC_ASDU=aTU.IEC_ASDU;
		TU_ACT_TRM_ENABLE=aTU.TU_ACT_TRM_ENABLE;
		TIMER_SEL_EXEC=aTU.TIMER_SEL_EXEC;
		TIMER_ACT_TRM=aTU.TIMER_ACT_TRM;
		ADDRESS_TS=aTU.ADDRESS_TS;
		TS_ON=aTU.TS_ON;
		TS_OFF=aTU.TS_OFF;
		ADDRESS_DAMAGE_TU=aTU.ADDRESS_DAMAGE_TU;
		MASKA_DAMAGE_TU=aTU.MASKA_DAMAGE_TU;
		strCOMMENT=aTU.strCOMMENT;
	}

	CTu(void);
	~CTu(void);
};

typedef CArray<CTu,CTu> CTuArray;